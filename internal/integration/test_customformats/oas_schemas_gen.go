// Code generated by ogen, DO NOT EDIT.

package api

import (
	custom2 "github.com/morozovcookie/ogen/internal/integration/customformats/phonetype"
	custom3 "github.com/morozovcookie/ogen/internal/integration/customformats/rgbatype"
)

// NewOptHex returns new OptHex with value set to v.
func NewOptHex(v int64) OptHex {
	return OptHex{
		Value: v,
		Set:   true,
	}
}

// OptHex is optional int64.
type OptHex struct {
	Value int64
	Set   bool
}

// IsSet returns true if OptHex was set.
func (o OptHex) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptHex) Reset() {
	var v int64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptHex) SetTo(v int64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptHex) Get() (v int64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptHex) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptPhone returns new OptPhone with value set to v.
func NewOptPhone(v custom2.Phone) OptPhone {
	return OptPhone{
		Value: v,
		Set:   true,
	}
}

// OptPhone is optional custom2.Phone.
type OptPhone struct {
	Value custom2.Phone
	Set   bool
}

// IsSet returns true if OptPhone was set.
func (o OptPhone) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptPhone) Reset() {
	var v custom2.Phone
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptPhone) SetTo(v custom2.Phone) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptPhone) Get() (v custom2.Phone, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptPhone) Or(d custom2.Phone) custom2.Phone {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptRgba returns new OptRgba with value set to v.
func NewOptRgba(v custom3.RGBA) OptRgba {
	return OptRgba{
		Value: v,
		Set:   true,
	}
}

// OptRgba is optional custom3.RGBA.
type OptRgba struct {
	Value custom3.RGBA
	Set   bool
}

// IsSet returns true if OptRgba was set.
func (o OptRgba) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptRgba) Reset() {
	var v custom3.RGBA
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptRgba) SetTo(v custom3.RGBA) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptRgba) Get() (v custom3.RGBA, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptRgba) Or(d custom3.RGBA) custom3.RGBA {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// Ref: #/components/schemas/User
type User struct {
	ID              int64         `json:"id"`
	Phone           custom2.Phone `json:"phone"`
	HomePhone       OptPhone      `json:"home_phone"`
	ProfileColor    custom3.RGBA  `json:"profile_color"`
	BackgroundColor OptRgba       `json:"background_color"`
	HexColor        OptHex        `json:"hex_color"`
}

// GetID returns the value of ID.
func (s *User) GetID() int64 {
	return s.ID
}

// GetPhone returns the value of Phone.
func (s *User) GetPhone() custom2.Phone {
	return s.Phone
}

// GetHomePhone returns the value of HomePhone.
func (s *User) GetHomePhone() OptPhone {
	return s.HomePhone
}

// GetProfileColor returns the value of ProfileColor.
func (s *User) GetProfileColor() custom3.RGBA {
	return s.ProfileColor
}

// GetBackgroundColor returns the value of BackgroundColor.
func (s *User) GetBackgroundColor() OptRgba {
	return s.BackgroundColor
}

// GetHexColor returns the value of HexColor.
func (s *User) GetHexColor() OptHex {
	return s.HexColor
}

// SetID sets the value of ID.
func (s *User) SetID(val int64) {
	s.ID = val
}

// SetPhone sets the value of Phone.
func (s *User) SetPhone(val custom2.Phone) {
	s.Phone = val
}

// SetHomePhone sets the value of HomePhone.
func (s *User) SetHomePhone(val OptPhone) {
	s.HomePhone = val
}

// SetProfileColor sets the value of ProfileColor.
func (s *User) SetProfileColor(val custom3.RGBA) {
	s.ProfileColor = val
}

// SetBackgroundColor sets the value of BackgroundColor.
func (s *User) SetBackgroundColor(val OptRgba) {
	s.BackgroundColor = val
}

// SetHexColor sets the value of HexColor.
func (s *User) SetHexColor(val OptHex) {
	s.HexColor = val
}
